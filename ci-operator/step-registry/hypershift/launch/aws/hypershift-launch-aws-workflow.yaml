workflow:
  as: hypershift-launch-aws
  env:
  - name: RELEASE_IMAGE_LATEST
    documentation: "The OCP release image to launch."
  - name: HYPERSHIFT_NODE_COUNT
    default: "2"
    documentation: "The number nodes to automatically create and join to the cluster."
  - name: HYPERSHIFT_BASE_DOMAIN
    default: "origin-ci-int-aws.dev.rhcloud.com"
    documentation: "The cluster's FQDN will be a subdomain of the base domain."
  - name: HYPERSHIFT_AWS_REGION
    default: "us-east-1"
    documentation: "The AWS region of the cluster."
  documentation: |-
    The HyperShift launch workflow executes tests against a new ephemeral
    HyperShift cluster. Administrative access to the control plane is provided
    via the `KUBECONFIG` environment variable.

    Note that tests will execute once the control plane is ready, regardless of
    whether nodes have been requested, have joined, or are available.

    The control plane is hosted on a dedicated standalone OCP cluster running
    HyperShift in the `osd-hypershift` AWS account and is destroyed after tests
    complete.

    The HyperShift launch capability is currently supported by the HyperShift
    team. For now, please direct all questions and comments to:

    - Alberto Lamela (agarcial@redhat.com)
    - Seth Jennings (sjenning@redhat.com)
    - Dan Mace (dmace@redhat.com)
    - Cesar Wong (cewong@redhat.com)

    Learn more about HyperShift here: https://github.com/openshift/hypershift

    Track HyperShift's development here: https://issues.redhat.com/projects/HOSTEDCP
    
  steps:
    post:
    - as: destroy
      cli: latest
      commands: |-
        set -exuo pipefail
        export KUBECONFIG=/var/run/hypershift/kubeconfig
        
        echo "$(date) Deleting HyperShift cluster ${NAMESPACE}-clusters/${NAMESPACE}"
        /usr/bin/hypershift destroy cluster \
          --aws-creds ${CLUSTER_PROFILE_DIR}/.awscred \
          --namespace "${NAMESPACE}-clusters" \
          --name ${NAMESPACE} \
          --region ${HYPERSHIFT_AWS_REGION} \
          --infra-id ${NAMESPACE} \
          --base-domain ${HYPERSHIFT_BASE_DOMAIN} \
          --cluster-grace-period 40m
        
        echo "$(date) Deleting cluster namespace ${NAMESPACE}-clusters"
        oc delete namespace "${NAMESPACE}-clusters"

        echo "$(date) Finished deleting cluster"
      from: hypershift
      grace_period: 5m0s
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      timeout: 15m0s
      credentials:
      - namespace: test-credentials
        name: hypershift-clusterbot-credentials
        mount_path: /var/run/hypershift
    pre:
    - ref: openshift-cluster-bot-rbac
    - ref: ipi-install-rbac
    - as: create
      cli: latest
      commands: |-
        set -exuo pipefail
        export KUBECONFIG=/var/run/hypershift/kubeconfig
        
        echo "$(date) Creating HyperShift cluster ${NAMESPACE}-clusters/${NAMESPACE}"
        /usr/bin/hypershift create cluster \
          --namespace "${NAMESPACE}-clusters" \
          --name ${NAMESPACE} \
          --node-pool-replicas ${HYPERSHIFT_NODE_COUNT} \
          --base-domain ${HYPERSHIFT_BASE_DOMAIN} \
          --region ${HYPERSHIFT_AWS_REGION} \
          --infra-id ${NAMESPACE} \
          --pull-secret ${CLUSTER_PROFILE_DIR}/pull-secret \
          --aws-creds ${CLUSTER_PROFILE_DIR}/.awscred \
          --release-image ${RELEASE_IMAGE_LATEST}
        
        echo "$(date) Waiting for the cluster to publish a kubeconfig"
        oc wait --namespace "${NAMESPACE}-clusters" hostedclusters/${NAMESPACE} --for condition=Available --timeout 24h
        /usr/bin/hypershift create kubeconfig > ${SHARED_DIR}/kubeconfig

        echo "$(date) Waiting for the cluster API server to become available"
        while true; do
          oc --kubeconfig ${SHARED_DIR}/kubeconfig whoami 2>&1 >/dev/null && break
          sleep 3
        done

        echo "$(date) The cluster is now available"
        oc --kubeconfig ${SHARED_DIR}/kubeconfig config view
      from: hypershift
      grace_period: 5m0s
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      timeout: 15m0s
      credentials:
      - namespace: test-credentials
        name: hypershift-clusterbot-credentials
        mount_path: /var/run/hypershift
      dependencies:
      - name: "release:latest"
        env: RELEASE_IMAGE_LATEST
